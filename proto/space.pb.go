// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/space.proto

/*
Package riseandfall is a generated protocol buffer package.

It is generated from these files:
	proto/space.proto

It has these top-level messages:
	Space
	Planet
	Ship
	Movement
*/
package riseandfall

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Space struct {
	Planets []*Planet `protobuf:"bytes,1,rep,name=planets" json:"planets,omitempty"`
	Ships   []*Ship   `protobuf:"bytes,2,rep,name=ships" json:"ships,omitempty"`
}

func (m *Space) Reset()                    { *m = Space{} }
func (m *Space) String() string            { return proto.CompactTextString(m) }
func (*Space) ProtoMessage()               {}
func (*Space) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Space) GetPlanets() []*Planet {
	if m != nil {
		return m.Planets
	}
	return nil
}

func (m *Space) GetShips() []*Ship {
	if m != nil {
		return m.Ships
	}
	return nil
}

type Planet struct {
	Name     string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id       uint32   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Orbiting []uint64 `protobuf:"varint,3,rep,packed,name=orbiting" json:"orbiting,omitempty"`
	Controll float32  `protobuf:"fixed32,4,opt,name=controll" json:"controll,omitempty"`
	Empire   uint32   `protobuf:"varint,5,opt,name=empire" json:"empire,omitempty"`
}

func (m *Planet) Reset()                    { *m = Planet{} }
func (m *Planet) String() string            { return proto.CompactTextString(m) }
func (*Planet) ProtoMessage()               {}
func (*Planet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Planet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Planet) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Planet) GetOrbiting() []uint64 {
	if m != nil {
		return m.Orbiting
	}
	return nil
}

func (m *Planet) GetControll() float32 {
	if m != nil {
		return m.Controll
	}
	return 0
}

func (m *Planet) GetEmpire() uint32 {
	if m != nil {
		return m.Empire
	}
	return 0
}

type Ship struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Types that are valid to be assigned to Position:
	//	*Ship_Orbiting
	//	*Ship_Moving
	Position isShip_Position `protobuf_oneof:"position"`
}

func (m *Ship) Reset()                    { *m = Ship{} }
func (m *Ship) String() string            { return proto.CompactTextString(m) }
func (*Ship) ProtoMessage()               {}
func (*Ship) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isShip_Position interface {
	isShip_Position()
}

type Ship_Orbiting struct {
	Orbiting uint32 `protobuf:"varint,2,opt,name=orbiting,oneof"`
}
type Ship_Moving struct {
	Moving *Movement `protobuf:"bytes,3,opt,name=moving,oneof"`
}

func (*Ship_Orbiting) isShip_Position() {}
func (*Ship_Moving) isShip_Position()   {}

func (m *Ship) GetPosition() isShip_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Ship) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Ship) GetOrbiting() uint32 {
	if x, ok := m.GetPosition().(*Ship_Orbiting); ok {
		return x.Orbiting
	}
	return 0
}

func (m *Ship) GetMoving() *Movement {
	if x, ok := m.GetPosition().(*Ship_Moving); ok {
		return x.Moving
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Ship) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Ship_OneofMarshaler, _Ship_OneofUnmarshaler, _Ship_OneofSizer, []interface{}{
		(*Ship_Orbiting)(nil),
		(*Ship_Moving)(nil),
	}
}

func _Ship_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Ship)
	// position
	switch x := m.Position.(type) {
	case *Ship_Orbiting:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Orbiting))
	case *Ship_Moving:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Moving); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Ship.Position has unexpected type %T", x)
	}
	return nil
}

func _Ship_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Ship)
	switch tag {
	case 2: // position.orbiting
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Position = &Ship_Orbiting{uint32(x)}
		return true, err
	case 3: // position.moving
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Movement)
		err := b.DecodeMessage(msg)
		m.Position = &Ship_Moving{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Ship_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Ship)
	// position
	switch x := m.Position.(type) {
	case *Ship_Orbiting:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Orbiting))
	case *Ship_Moving:
		s := proto.Size(x.Moving)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Movement struct {
	Start    uint32  `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End      uint32  `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	Distance float64 `protobuf:"fixed64,3,opt,name=distance" json:"distance,omitempty"`
	Progress float64 `protobuf:"fixed64,4,opt,name=progress" json:"progress,omitempty"`
}

func (m *Movement) Reset()                    { *m = Movement{} }
func (m *Movement) String() string            { return proto.CompactTextString(m) }
func (*Movement) ProtoMessage()               {}
func (*Movement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Movement) GetStart() uint32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Movement) GetEnd() uint32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Movement) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Movement) GetProgress() float64 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func init() {
	proto.RegisterType((*Space)(nil), "riseandfall.Space")
	proto.RegisterType((*Planet)(nil), "riseandfall.Planet")
	proto.RegisterType((*Ship)(nil), "riseandfall.Ship")
	proto.RegisterType((*Movement)(nil), "riseandfall.Movement")
}

func init() { proto.RegisterFile("proto/space.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4b, 0x4e, 0xc3, 0x30,
	0x18, 0x84, 0xeb, 0xbc, 0x28, 0x7f, 0x55, 0x44, 0xcd, 0x43, 0x16, 0x62, 0x11, 0x65, 0x83, 0x37,
	0xb4, 0x52, 0xb9, 0x01, 0xab, 0x6e, 0x90, 0x90, 0x7b, 0x00, 0xe4, 0x36, 0xa6, 0x35, 0x4a, 0x6c,
	0x63, 0x5b, 0x5d, 0x71, 0x78, 0x64, 0xa7, 0x89, 0xd2, 0xdd, 0x8c, 0x66, 0x92, 0xef, 0x1f, 0x19,
	0x16, 0xc6, 0x6a, 0xaf, 0x57, 0xce, 0xf0, 0xbd, 0x58, 0x46, 0x8d, 0x67, 0x56, 0x3a, 0xc1, 0x55,
	0xfd, 0xcd, 0x9b, 0xa6, 0xfa, 0x82, 0x7c, 0x1b, 0x32, 0xfc, 0x0a, 0x57, 0xa6, 0xe1, 0x4a, 0x78,
	0x47, 0x50, 0x99, 0xd2, 0xd9, 0xfa, 0x6e, 0x39, 0xea, 0x2d, 0x3f, 0x63, 0xc6, 0xfa, 0x0e, 0x7e,
	0x81, 0xdc, 0x1d, 0xa5, 0x71, 0x24, 0x89, 0xe5, 0xc5, 0x45, 0x79, 0x7b, 0x94, 0x86, 0x75, 0x79,
	0xf5, 0x07, 0x45, 0xf7, 0x2d, 0xc6, 0x90, 0x29, 0xde, 0x0a, 0x82, 0x4a, 0x44, 0xaf, 0x59, 0xd4,
	0xf8, 0x06, 0x12, 0x59, 0x93, 0xa4, 0x44, 0x74, 0xce, 0x12, 0x59, 0xe3, 0x27, 0x98, 0x6a, 0xbb,
	0x93, 0x5e, 0xaa, 0x03, 0x49, 0xcb, 0x94, 0x66, 0x6c, 0xf0, 0x21, 0xdb, 0x6b, 0xe5, 0xad, 0x6e,
	0x1a, 0x92, 0x95, 0x88, 0x26, 0x6c, 0xf0, 0xf8, 0x11, 0x0a, 0xd1, 0x1a, 0x69, 0x05, 0xc9, 0xe3,
	0xbf, 0xce, 0xae, 0xfa, 0x85, 0x2c, 0x1c, 0x73, 0xe6, 0x04, 0x72, 0x16, 0x39, 0xcf, 0x23, 0x4e,
	0xa4, 0x6f, 0x26, 0x23, 0xd2, 0x0a, 0x8a, 0x56, 0x9f, 0xba, 0x1b, 0x10, 0x9d, 0xad, 0x1f, 0x2e,
	0xd6, 0x7d, 0xe8, 0x93, 0x68, 0x85, 0xf2, 0x9b, 0x09, 0x3b, 0xd7, 0xde, 0x01, 0xa6, 0x46, 0x3b,
	0xe9, 0xa5, 0x56, 0xd5, 0x0f, 0x4c, 0xfb, 0x06, 0xbe, 0x87, 0xdc, 0x79, 0x6e, 0x7d, 0x24, 0xcf,
	0x59, 0x67, 0xf0, 0x2d, 0xa4, 0x42, 0xf5, 0xab, 0x83, 0x0c, 0xd3, 0x6a, 0xe9, 0x3c, 0x57, 0x7b,
	0x11, 0x91, 0x88, 0x0d, 0x3e, 0x64, 0xc6, 0xea, 0x83, 0x15, 0xce, 0xc5, 0xd9, 0x88, 0x0d, 0x7e,
	0x57, 0xc4, 0x17, 0x7d, 0xfb, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xa6, 0x9b, 0x5e, 0xe6, 0x01,
	0x00, 0x00,
}
